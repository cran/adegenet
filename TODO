#######################
#
# adegenet TODO list
#
#######################
#
# please list here all intended modifications
# and all detected bugs
#
# please add a "-- done" or "-- fixed" tag when
# you achieved something
#
# Inside a given section, priority goes decreasing.
#
# Delete fixed things each new release.
#
# T.J. 2008
#
######################



# FOR NEXT STABLE VERSION
=========================
=========================

# CODE ISSUES:
==============
* df2genind fails when entirely non-type individuals exist -- done (TJ)
* optimize.monmonier: check the way final object is constructed: can fail when the function is called inside another function -- fixed (TJ)
* monmonier: fails on a regular grid; must be a problem in the C code detecting colinearity between two segments -- fixed (TJ)
* monmonier: bug when bd.length is abnormally high -- fixed (TJ) 
*

# DOCUMENTATION ISSUES:
=======================
* 

# NEW IMPLEMENTATIONS:
=====================
* Implement spatial weights derived from inverse spatial distances in chooseCN -- done (TJ)
* Implement a Fst wrapper for genind objects -- done (TJ)
* Proceed wisely the elements of @other when subsetting objects using the "[" operator. --done (TJ)
*

# TESTING:
==========
* 



# LOW PRIORITY / MINOR BUGS
===========================
===========================
* in spca, when nfposi=0, the returned object actually contains what corresponds to nfposi=1. Comes from multispati in ade4. To correct.
* use spcaIllus to illustrate global.rtest and local.rtest
* check all examples and look for possible improvements
* Implement "sep" argument in df2genind
* Implement a method to merge different markers for the same individuals
* Build accessors for marker names, indiv names, pop names, spatial coords, ...
* Return a spatial object from monmonier (class sp?)


# LONG TERM
==========================
==========================
* import from geneticsBase -- for now their basic class is not even documented!
* export to geneticsBase -- same thing
* see where code needs tuning, and use C/C++
* implement global.rtest and local.rtest for genind/genpop objects
* Implement method "scale" for genind / genpop objects
* Implement dudi wrappers for genind / genpop objects
